(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){"use strict";module.exports=function(update){var placeholders={};function addObserver(id){var observer=new MutationObserver(function(mutations){mutations.forEach(function(mutation){mutation.addedNodes.forEach(function(node){if(node.getAttribute&&node.getAttribute("data-lr")){if(!node.getAttribute("id")){throw new Error("Could not create an update event for component, id is missing: ",node)}var updateType=node.getAttribute("id")+node.getAttribute("data-lr").slice(0,1).toUpperCase()+node.getAttribute("data-lr").slice(1);update({matchValue:window.location.pathname,updateType:updateType})}})})});observer.observe(document.querySelector(id),{attributes:false,childList:true,subtree:false});placeholders[id]=observer}var exposed={render:function render(html,id){if(!placeholders[id]){addObserver(id)}if(!document.querySelector(id)){throw new Error("Trying to render, but could not find placeholder "+id)}document.querySelector(id).innerHTML=html}};document.addEventListener("DOMContentLoaded",function(){[].slice.call(document.querySelectorAll('[data-lr="loaded"]')).forEach(function(component){if(!component.getAttribute("id")){throw new Error("Found component, but id is missing: ",component)}update({matchValue:window.location.pathname,updateType:component.getAttribute("id")+"Loaded"})})});return exposed}},{}]},{},[1]);
