(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){"use strict";module.exports=function(update){var placeholders={};function addObserver(id){var observer=new MutationObserver(function(mutations){mutations.forEach(function(mutation){if(mutation.attributeName==="lg-placeholder"){update({matchValue:window.location.pathname,updateType:"domReady"})}})});observer.observe(document.querySelector(id),{attributes:true,childList:false,subtree:false});placeholders[id].observer=observer}var exposed={render:function render(html,id){if(placeholders[id]&&placeholders[id].observer){placeholders[id].observer.disconnect()}placeholders[id]={html:html}},html:function html(){Object.keys(placeholders).filter(function(id){return placeholders[id].html}).forEach(function(id){if(!document.querySelector(id)){throw new Error("Trying to render, but could not find placeholder "+id)}addObserver(id);document.querySelector(id).innerHTML=placeholders[id].html;document.querySelector(id).setAttribute("lg-placeholder",id);delete placeholders[id].html})}};return exposed}},{}]},{},[1]);
